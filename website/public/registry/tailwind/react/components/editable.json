{
  "files": [
    {
      "filename": "editable.ts",
      "content": "import { Editable as ArkEditable } from '@ark-ui/react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\nimport { styled } from '~/lib/styled'\n\nconst styles = tv({\n  base: 'editable',\n  slots: {\n    root: 'editable__root',\n    area: 'editable__area',\n    label: 'editable__label',\n    preview: 'editable__preview',\n    input: 'editable__input',\n    editTrigger: 'editable__editTrigger',\n    submitTrigger: 'editable__submitTrigger',\n    cancelTrigger: 'editable__cancelTrigger',\n    control: 'editable__control',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const EditableRoot = withProvider(styled(ArkEditable.Root), 'root')\nexport const EditableArea = withContext(styled(ArkEditable.Area), 'area')\nexport const EditableCancelTrigger = withContext(styled(ArkEditable.CancelTrigger), 'cancelTrigger')\nexport const EditableControl = withContext(styled(ArkEditable.Control), 'control')\nexport const EditableEditTrigger = withContext(styled(ArkEditable.EditTrigger), 'editTrigger')\nexport const EditableInput = withContext(styled(ArkEditable.Input), 'input')\nexport const EditableLabel = withContext(styled(ArkEditable.Label), 'label')\nexport const EditablePreview = withContext(styled(ArkEditable.Preview), 'preview')\nexport const EditableSubmitTrigger = withContext(styled(ArkEditable.SubmitTrigger), 'submitTrigger')\n\nexport const Editable = Object.assign(EditableRoot, {\n  Root: EditableRoot,\n  Area: EditableArea,\n  CancelTrigger: EditableCancelTrigger,\n  Control: EditableControl,\n  EditTrigger: EditableEditTrigger,\n  Input: EditableInput,\n  Label: EditableLabel,\n  Preview: EditablePreview,\n  SubmitTrigger: EditableSubmitTrigger,\n})\n",
      "hasMultipleParts": true
    }
  ]
}
