{
  "files": [
    {
      "filename": "popover.ts",
      "content": "import { Popover as ArkPopover } from '@ark-ui/solid'\nimport { createStyleContext } from '~/lib/create-style-context'\nimport { styled } from '~/lib/styled'\n\nconst styles = tv({\n  base: 'popover',\n  slots: {\n    arrow: 'popover__arrow',\n    arrowTip: 'popover__arrowTip',\n    anchor: 'popover__anchor',\n    trigger: 'popover__trigger',\n    indicator: 'popover__indicator',\n    positioner: 'popover__positioner',\n    content: 'popover__content',\n    title: 'popover__title',\n    description: 'popover__description',\n    closeTrigger: 'popover__closeTrigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const PopoverRoot = withProvider(ArkPopover.Root)\nexport const PopoverAnchor = withContext(styled(ArkPopover.Anchor), 'anchor')\nexport const PopoverArrow = withContext(styled(ArkPopover.Arrow), 'arrow')\nexport const PopoverArrowTip = withContext(styled(ArkPopover.ArrowTip), 'arrowTip')\nexport const PopoverCloseTrigger = withContext(styled(ArkPopover.CloseTrigger), 'closeTrigger')\nexport const PopoverContent = withContext(styled(ArkPopover.Content), 'content')\nexport const PopoverDescription = withContext(styled(ArkPopover.Description), 'description')\nexport const PopoverIndicator = withContext(styled(ArkPopover.Indicator), 'indicator')\nexport const PopoverPositioner = withContext(styled(ArkPopover.Positioner), 'positioner')\nexport const PopoverTitle = withContext(styled(ArkPopover.Title), 'title')\nexport const PopoverTrigger = withContext(styled(ArkPopover.Trigger), 'trigger')\n\nexport const Popover = Object.assign(PopoverRoot, {\n  Root: PopoverRoot,\n  Anchor: PopoverAnchor,\n  Arrow: PopoverArrow,\n  ArrowTip: PopoverArrowTip,\n  CloseTrigger: PopoverCloseTrigger,\n  Content: PopoverContent,\n  Description: PopoverDescription,\n  Indicator: PopoverIndicator,\n  Positioner: PopoverPositioner,\n  Title: PopoverTitle,\n  Trigger: PopoverTrigger,\n})\n",
      "hasMultipleParts": true
    }
  ]
}
