{
  "files": [
    {
      "filename": "slider.ts",
      "content": "import { Slider as ArkSlider } from '@ark-ui/react/slider'\nimport { chakra, type HTMLChakraProps } from '@chakra-ui/react'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext('Slider')\n\nconst Slider = withProvider(chakra(ArkSlider.Root), 'root')\nconst SliderControl = withContext(chakra(ArkSlider.Control), 'control')\nconst SliderLabel = withContext(chakra(ArkSlider.Label), 'label')\nconst SliderMarker = withContext(chakra(ArkSlider.Marker), 'marker')\nconst SliderMarkerGroup = withContext(chakra(ArkSlider.MarkerGroup), 'markerGroup')\nconst SliderRange = withContext(chakra(ArkSlider.Range), 'range')\nconst SliderThumb = withContext(chakra(ArkSlider.Thumb), 'thumb')\nconst SliderTrack = withContext(chakra(ArkSlider.Track), 'track')\nconst SliderValueText = withContext(chakra(ArkSlider.ValueText), 'valueText')\n\nconst Root = Slider\nconst Control = SliderControl\nconst Label = SliderLabel\nconst Marker = SliderMarker\nconst MarkerGroup = SliderMarkerGroup\nconst Range = SliderRange\nconst Thumb = SliderThumb\nconst Track = SliderTrack\nconst ValueText = SliderValueText\n\nexport {\n  Control,\n  Label,\n  Marker,\n  MarkerGroup,\n  Range,\n  Root,\n  Slider,\n  SliderControl,\n  SliderLabel,\n  SliderMarker,\n  SliderMarkerGroup,\n  SliderRange,\n  SliderThumb,\n  SliderTrack,\n  SliderValueText,\n  Thumb,\n  Track,\n  ValueText,\n}\n\nexport interface SliderProps extends HTMLChakraProps<typeof Slider> {}\nexport interface SliderControlProps extends HTMLChakraProps<typeof SliderControl> {}\nexport interface SliderLabelProps extends HTMLChakraProps<typeof SliderLabel> {}\nexport interface SliderMarkerProps extends HTMLChakraProps<typeof SliderMarker> {}\nexport interface SliderMarkerGroupProps extends HTMLChakraProps<typeof SliderMarkerGroup> {}\nexport interface SliderRangeProps extends HTMLChakraProps<typeof SliderRange> {}\nexport interface SliderThumbProps extends HTMLChakraProps<typeof SliderThumb> {}\nexport interface SliderTrackProps extends HTMLChakraProps<typeof SliderTrack> {}\nexport interface SliderValueTextProps extends HTMLChakraProps<typeof SliderValueText> {}\n",
      "hasMultipleParts": true
    }
  ]
}
