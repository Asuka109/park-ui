{
  "files": [
    {
      "filename": "menu.ts",
      "content": "import { Menu as ArkMenu } from '@ark-ui/react/menu'\nimport { chakra, type HTMLChakraProps } from '@chakra-ui/react'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext('Menu')\n\nconst Menu = withProvider(ArkMenu.Root)\nconst MenuArrow = withContext(chakra(ArkMenu.Arrow), 'arrow')\nconst MenuArrowTip = withContext(chakra(ArkMenu.ArrowTip), 'arrowTip')\nconst MenuContent = withContext(chakra(ArkMenu.Content), 'content')\nconst MenuContextTrigger = withContext(chakra(ArkMenu.ContextTrigger), 'contextTrigger')\nconst MenuIndicator = withContext(chakra(ArkMenu.Indicator), 'indicator')\nconst MenuItem = withContext(chakra(ArkMenu.Item), 'item')\nconst MenuItemGroup = withContext(chakra(ArkMenu.ItemGroup), 'itemGroup')\nconst MenuItemGroupLabel = withContext(chakra(ArkMenu.ItemGroupLabel), 'itemGroupLabel')\nconst MenuOptionItem = withContext(chakra(ArkMenu.OptionItem), 'optionItem')\nconst MenuOptionItemIndicator = withContext(\n  chakra(ArkMenu.OptionItemIndicator),\n  'optionItemIndicator',\n)\nconst MenuOptionItemText = withContext(chakra(ArkMenu.OptionItemText), 'optionItemText')\nconst MenuPositioner = withContext(chakra(ArkMenu.Positioner), 'positioner')\nconst MenuSeparator = withContext(chakra(ArkMenu.Separator), 'separator')\nconst MenuTrigger = withContext(chakra(ArkMenu.Trigger), 'trigger')\nconst MenuTriggerItem = withContext(chakra(ArkMenu.TriggerItem), 'triggerItem')\n\nconst Root = Menu\nconst Arrow = MenuArrow\nconst ArrowTip = MenuArrowTip\nconst Content = MenuContent\nconst ContextTrigger = MenuContextTrigger\nconst Indicator = MenuIndicator\nconst Item = MenuItem\nconst ItemGroup = MenuItemGroup\nconst ItemGroupLabel = MenuItemGroupLabel\nconst OptionItem = MenuOptionItem\nconst OptionItemIndicator = MenuOptionItemIndicator\nconst OptionItemText = MenuOptionItemText\nconst Positioner = MenuPositioner\nconst Separator = MenuSeparator\nconst Trigger = MenuTrigger\nconst TriggerItem = MenuTriggerItem\n\nexport {\n  Arrow,\n  ArrowTip,\n  Content,\n  ContextTrigger,\n  Indicator,\n  Item,\n  ItemGroup,\n  ItemGroupLabel,\n  Menu,\n  MenuArrow,\n  MenuArrowTip,\n  MenuContent,\n  MenuContextTrigger,\n  MenuIndicator,\n  MenuItem,\n  MenuItemGroup,\n  MenuItemGroupLabel,\n  MenuOptionItem,\n  MenuOptionItemIndicator,\n  MenuOptionItemText,\n  MenuPositioner,\n  MenuSeparator,\n  MenuTrigger,\n  MenuTriggerItem,\n  OptionItem,\n  OptionItemIndicator,\n  OptionItemText,\n  Positioner,\n  Root,\n  Separator,\n  Trigger,\n  TriggerItem,\n}\n\nexport interface MenuProps extends HTMLChakraProps<typeof Menu> {}\nexport interface MenuArrowProps extends HTMLChakraProps<typeof MenuArrow> {}\nexport interface MenuArrowTipProps extends HTMLChakraProps<typeof MenuArrowTip> {}\nexport interface MenuContentProps extends HTMLChakraProps<typeof MenuContent> {}\nexport interface MenuContextTriggerProps extends HTMLChakraProps<typeof MenuContextTrigger> {}\nexport interface MenuIndicatorProps extends HTMLChakraProps<typeof MenuIndicator> {}\nexport interface MenuItemProps extends HTMLChakraProps<typeof MenuItem> {}\nexport interface MenuItemGroupProps extends HTMLChakraProps<typeof MenuItemGroup> {}\nexport interface MenuItemGroupLabelProps extends HTMLChakraProps<typeof MenuItemGroupLabel> {}\nexport interface MenuOptionItemProps extends HTMLChakraProps<typeof MenuOptionItem> {}\nexport interface MenuOptionItemIndicatorProps\n  extends HTMLChakraProps<typeof MenuOptionItemIndicator> {}\nexport interface MenuOptionItemTextProps extends HTMLChakraProps<typeof MenuOptionItemText> {}\nexport interface MenuPositionerProps extends HTMLChakraProps<typeof MenuPositioner> {}\nexport interface MenuSeparatorProps extends HTMLChakraProps<typeof MenuSeparator> {}\nexport interface MenuTriggerProps extends HTMLChakraProps<typeof MenuTrigger> {}\nexport interface MenuTriggerItemProps extends HTMLChakraProps<typeof MenuTriggerItem> {}\n",
      "hasMultipleParts": true
    }
  ]
}
