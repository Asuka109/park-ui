{
  "files": [
    {
      "filename": "pagination.tsx",
      "content": "import { Pagination as ArkPagination, type PaginationRootProps } from '@ark-ui/react/pagination'\nimport { forwardRef } from 'react'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { pagination, type PaginationVariantProps } from 'styled-system/recipes'\nimport type { Assign, JsxStyleProps } from 'styled-system/types'\nimport { Button } from '~/components/ui/button'\nimport { IconButton } from '~/components/ui/icon-button'\n\nexport interface PaginationProps\n\textends Assign<JsxStyleProps, PaginationRootProps>,\n\t\tPaginationVariantProps {}\n\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>((props, ref) => {\n\t\tconst [variantProps, paginationProps] = pagination.splitVariantProps(props)\n\t\tconst [cssProps, localProps] = splitCssProps(paginationProps)\n\t\tconst { className, ...rootProps } = localProps\n\t\tconst styles = pagination(variantProps)\n\n\t\treturn (\n\t\t\t<ArkPagination.Root\n\t\t\t\tref={ref}\n\t\t\t\t// @ts-expect-error TODO cssProps is to complex to be typed\n\t\t\t\tclassName={cx(styles.root, css(cssProps), className)}\n\t\t\t\t{...rootProps}\n\t\t\t>\n\t\t\t\t{({ pages }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ArkPagination.PrevTrigger className={styles.prevTrigger} asChild>\n\t\t\t\t\t\t\t<IconButton variant=\"ghost\" aria-label=\"Next Page\">\n\t\t\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ArkPagination.PrevTrigger>\n\t\t\t\t\t\t{pages.map((page, index) =>\n\t\t\t\t\t\t\tpage.type === 'page' ? (\n\t\t\t\t\t\t\t\t<ArkPagination.Item className={styles.item} key={index} {...page} asChild>\n\t\t\t\t\t\t\t\t\t<Button variant=\"outline\">{page.value}</Button>\n\t\t\t\t\t\t\t\t</ArkPagination.Item>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ArkPagination.Ellipsis className={styles.ellipsis} key={index} index={index}>\n                &#8230;\n\t\t\t\t\t\t\t\t</ArkPagination.Ellipsis>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ArkPagination.NextTrigger className={styles.nextTrigger} asChild>\n\t\t\t\t\t\t\t<IconButton variant=\"ghost\" aria-label=\"Next Page\">\n\t\t\t\t\t\t\t\t<ChevronRightIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ArkPagination.NextTrigger>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</ArkPagination.Root>\n\t\t);\n\t},\n);\n\nPagination.displayName = \"Pagination\";\n\nconst ChevronLeftIcon = () => (\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<title>Chevron Left Icon</title>\n\t\t<path\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\tstrokeWidth=\"2\"\n\t\t\td=\"m15 18l-6-6l6-6\"\n\t\t/>\n\t</svg>\n);\n\nconst ChevronRightIcon = () => (\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<title>Chevron Right Icon</title>\n\t\t<path\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\tstrokeWidth=\"2\"\n\t\t\td=\"m9 18l6-6l-6-6\"\n\t\t/>\n\t</svg>\n);\n",
      "hasMultipleParts": false
    }
  ]
}
