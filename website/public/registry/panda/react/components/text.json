{
  "files": [
    {
      "filename": "text.tsx",
      "content": "import { forwardRef, useMemo } from 'react'\nimport { type HTMLStyledProps, type StyledComponent, styled } from 'styled-system/jsx'\nimport { type TextVariantProps, text } from 'styled-system/recipes'\n\ntype As = 'p' | 'span' | 'div' | 'label' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n\nexport type TextProps = {\n  as?: As\n} & TextVariantProps &\n  HTMLStyledProps<As>\n\nexport const Text = forwardRef<HTMLHeadingElement, TextProps>((props, ref) => {\n  const { as = 'p', ...localProps } = props\n  const Dynamic = useMemo(() => styled(as, text) as StyledComponent<As>, [as])\n\n  return <Dynamic ref={ref} {...localProps} />\n})\n\nText.displayName = 'Text'\n",
      "hasMultipleParts": false
    }
  ]
}
