{
  "files": [
    {
      "filename": "select.ts",
      "content": "import * as Ark from '@ark-ui/react/select'\nimport { styled } from 'styled-system/jsx'\nimport { select, type SelectVariantProps } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport * from '@ark-ui/react/select'\nexport type SelectProps = Ark.SelectProps & SelectVariantProps\n\nconst SelectRoot = withProvider(styled(Ark.Select.Root), 'root')\nexport const SelectClearTrigger = withContext(styled(Ark.Select.ClearTrigger), 'clearTrigger')\nexport const SelectContent = withContext(styled(Ark.Select.Content), 'content')\nexport const SelectControl = withContext(styled(Ark.Select.Control), 'control')\nexport const SelectIndicator = withContext(styled(Ark.Select.Indicator), 'indicator')\nexport const SelectItem = withContext(styled(Ark.Select.Item), 'item')\nexport const SelectItemGroup = withContext(styled(Ark.Select.ItemGroup), 'itemGroup')\nexport const SelectItemGroupLabel = withContext(styled(Ark.Select.ItemGroupLabel), 'itemGroupLabel')\nexport const SelectItemIndicator = withContext(styled(Ark.Select.ItemIndicator), 'itemIndicator')\nexport const SelectItemText = withContext(styled(Ark.Select.ItemText), 'itemText')\nexport const SelectLabel = withContext(styled(Ark.Select.Label), 'label')\nexport const SelectPositioner = withContext(styled(Ark.Select.Positioner), 'positioner')\nexport const SelectTrigger = withContext(styled(Ark.Select.Trigger), 'trigger')\nexport const SelectValueText = withContext(styled(Ark.Select.ValueText), 'valueText')\n\nexport const Select = Object.assign(SelectRoot, {\n  Root: SelectRoot,\n  ClearTrigger: SelectClearTrigger,\n  Content: SelectContent,\n  Control: SelectControl,\n  Indicator: SelectIndicator,\n  Item: SelectItem,\n  ItemGroup: SelectItemGroup,\n  ItemGroupLabel: SelectItemGroupLabel,\n  ItemIndicator: SelectItemIndicator,\n  ItemText: SelectItemText,\n  Label: SelectLabel,\n  Positioner: SelectPositioner,\n  Trigger: SelectTrigger,\n  ValueText: SelectValueText,\n})\n"
    }
  ]
}
