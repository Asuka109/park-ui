{
  "files": [
    {
      "filename": "editable.tsx",
      "content": "import * as Ark from '@ark-ui/react/editable'\nimport { styled } from 'styled-system/jsx'\nimport { editable, type EditableVariantProps } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(editable)\n\nexport * from '@ark-ui/react/editable'\nexport type EditableProps = Ark.EditableProps & EditableVariantProps\n\nconst EditableRoot = withProvider(styled(Ark.Editable.Root), 'root')\nexport const EditableArea = withContext(styled(Ark.Editable.Area), 'area')\nexport const EditableCancelTrigger = withContext(\n  styled(Ark.Editable.CancelTrigger),\n  'cancelTrigger',\n)\nexport const EditableControl = withContext(styled(Ark.Editable.Control), 'control')\nexport const EditableEditTrigger = withContext(styled(Ark.Editable.EditTrigger), 'editTrigger')\nexport const EditableInput = withContext(styled(Ark.Editable.Input), 'input')\nexport const EditableLabel = withContext(styled(Ark.Editable.Label), 'label')\nexport const EditablePreview = withContext(styled(Ark.Editable.Preview), 'preview')\nexport const EditableSubmitTrigger = withContext(\n  styled(Ark.Editable.SubmitTrigger),\n  'submitTrigger',\n)\n\nexport const Editable = Object.assign(EditableRoot, {\n  Root: EditableRoot,\n  Area: EditableArea,\n  CancelTrigger: EditableCancelTrigger,\n  Control: EditableControl,\n  EditTrigger: EditableEditTrigger,\n  Input: EditableInput,\n  Label: EditableLabel,\n  Preview: EditablePreview,\n  SubmitTrigger: EditableSubmitTrigger,\n})\n"
    }
  ]
}
