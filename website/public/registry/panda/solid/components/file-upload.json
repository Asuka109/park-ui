{
  "files": [
    {
      "filename": "file-upload.ts",
      "content": "import {\n  FileUpload as ArkFileUpload,\n  type FileUploadProps as ArkFileUploadProps,\n} from '@ark-ui/solid'\nimport { styled } from 'styled-system/jsx'\nimport { fileUpload, type FileUploadVariantProps } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(fileUpload)\n\nexport type FileUploadProps = ArkFileUploadProps & FileUploadVariantProps\n\nconst FileUploadRoot = withProvider(styled(ArkFileUpload.Root), 'root')\nexport const FileUploadDropzone = withContext(styled(ArkFileUpload.Dropzone), 'dropzone')\nexport const FileUploadLabel = withContext(styled(ArkFileUpload.Label), 'label')\nexport const FileUploadTrigger = withContext(styled(ArkFileUpload.Trigger), 'trigger')\nexport const FileUploadItemGroup = withContext(styled(ArkFileUpload.ItemGroup), 'itemGroup')\nexport const FileUploadItem = withContext(styled(ArkFileUpload.Item), 'item')\nexport const FileUploadItemName = withContext(styled(ArkFileUpload.ItemName), 'itemName')\nexport const FileUploadItemPreview = withContext(styled(ArkFileUpload.ItemPreview), 'itemPreview')\nexport const FileUploadItemSizeText = withContext(\n  styled(ArkFileUpload.ItemSizeText),\n  'itemSizeText',\n)\nexport const FileUploadItemDeleteTrigger = withContext(\n  styled(ArkFileUpload.ItemDeleteTrigger),\n  'itemDeleteTrigger',\n)\n\nexport const FileUpload = Object.assign(FileUploadRoot, {\n  Root: FileUploadRoot,\n  Dropzone: FileUploadDropzone,\n  Label: FileUploadLabel,\n  Trigger: FileUploadTrigger,\n  ItemGroup: FileUploadItemGroup,\n  Item: FileUploadItem,\n  ItemName: FileUploadItemName,\n  ItemPreview: FileUploadItemPreview,\n  ItemSizeText: FileUploadItemSizeText,\n  ItemDeleteTrigger: FileUploadItemDeleteTrigger,\n})\n"
    }
  ]
}
