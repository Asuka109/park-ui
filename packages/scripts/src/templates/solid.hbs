import {
  {{rootComponent}} as Ark{{rootComponent}},
  type {{rootComponent}}Props as Ark{{rootComponent}}Props,
} from '@ark-ui/solid'
import { styled } from 'styled-system/jsx'
import { {{className}}, type {{titleCase className}}VariantProps } from 'styled-system/recipes'
import { createStyleContext } from '~/lib/create-style-context'

const { withProvider, withContext } = createStyleContext({{className}})

export type {{titleCase className}}Props = Ark{{rootComponent}}Props & {{titleCase className}}VariantProps

{{#each components}}
{{#if (eq @key "Root")}}
const {{../rootComponent}}Root = withProvider(styled(Ark{{../rootComponent}}.{{@key}}), '{{this.partName}}')
{{else}}
export const {{this.name}} = withContext(styled(Ark{{../rootComponent}}.{{@key}}), '{{this.partName}}')
{{/if}}
{{/each}}

export const {{rootComponent}} = Object.assign({{rootComponent}}Root, {
{{#each components}}
 {{#if (eq @key "Root")}}
  {{@key}}: {{../rootComponent}}Root,
  {{else}}
  {{@key}}: {{this.name}},
  {{/if}}
{{/each}}
})
